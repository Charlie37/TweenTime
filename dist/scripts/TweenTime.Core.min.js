!function(t,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("signals"),require("gsap").TweenMax,require("gsap").TimelineMax,require("gsap").Quad,require("lodash")):"function"==typeof define&&define.amd?define(["signals","TweenMax","TimelineMax","Quad","lodash"],e):"object"==typeof exports?exports.Core=e(require("signals"),require("gsap").TweenMax,require("gsap").TimelineMax,require("gsap").Quad,require("lodash")):(t.TweenTime=t.TweenTime||{},t.TweenTime.Core=e(t.signals,t.TweenMax,t.TimelineMax,t.Quad,t._))}(this,function(__WEBPACK_EXTERNAL_MODULE_6__,__WEBPACK_EXTERNAL_MODULE_8__,__WEBPACK_EXTERNAL_MODULE_9__,__WEBPACK_EXTERNAL_MODULE_10__,__WEBPACK_EXTERNAL_MODULE_11__){return function(t){function e(B){if(I[B])return I[B].exports;var n=I[B]={exports:{},id:B,loaded:!1};return t[B].call(n.exports,n,n.exports,e),n.loaded=!0,n.exports}var I={};return e.m=t,e.c=I,e.p="",e(0)}([function(module,exports,__webpack_require__){eval("'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _Utils = __webpack_require__(1);\n\nvar _Utils2 = _interopRequireDefault(_Utils);\n\nvar _Timer = __webpack_require__(2);\n\nvar _Timer2 = _interopRequireDefault(_Timer);\n\nvar _Orchestrator = __webpack_require__(7);\n\nvar _Orchestrator2 = _interopRequireDefault(_Orchestrator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _ = __webpack_require__(11);\n\nvar Core = function () {\n  function Core(data) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Core);\n\n    this.data = data;\n    this.options = options;\n    this.timer = new _Timer2.default(options);\n    this.orchestrator = new _Orchestrator2.default(this.timer, this.data);\n  }\n\n  _createClass(Core, [{\n    key: 'addUpdateListener',\n    value: function addUpdateListener(listener) {\n      this.orchestrator.addUpdateListener(listener);\n    }\n  }, {\n    key: 'removeUpdateListener',\n    value: function removeUpdateListener(listener) {\n      this.orchestrator.removeUpdateListener(listener);\n    }\n  }, {\n    key: 'setData',\n    value: function setData(data) {\n      this.data = data;\n      this.orchestrator.setData(data);\n    }\n  }, {\n    key: 'getData',\n    value: function getData() {\n      return this.data;\n    }\n  }, {\n    key: 'getItem',\n    value: function getItem(item_id) {\n      // In case we passed the item object directly return it.\n      if (item_id && (typeof item_id === 'undefined' ? 'undefined' : _typeof(item_id)) === 'object') {\n        return item_id;\n      }\n\n      return _.find(this.data, function (item) {\n        return item.id === item_id;\n      });\n    }\n  }, {\n    key: 'getCurrentTime',\n    value: function getCurrentTime() {\n      return this.timer.getCurrentTime();\n    }\n  }, {\n    key: 'getProperty',\n    value: function getProperty(prop_name, item_id_or_obj) {\n      // If we passed the item name get the object from it.\n      var item = this.getItem(item_id_or_obj);\n\n      // Return false if we have no item\n      if (!item) {\n        return false;\n      }\n\n      return _.find(item.properties, function (property) {\n        return property.name === prop_name;\n      });\n    }\n  }, {\n    key: 'getValues',\n    value: function getValues(item_id_or_obj) {\n      // If we passed the item name get the object from it.\n      var item = this.getItem(item_id_or_obj);\n\n      // Return false if we have no item\n      if (!item) {\n        return undefined;\n      }\n\n      return item.values;\n    }\n  }, {\n    key: 'getValue',\n    value: function getValue(prop_name, item_id_or_obj) {\n      // If we passed the item name get the object from it.\n      var values = this.getValues(item_id_or_obj);\n\n      // Return false if we have no item\n      if (!values) {\n        return undefined;\n      }\n\n      if (values[prop_name] !== undefined) {\n        return values[prop_name];\n      }\n      return undefined;\n    }\n  }, {\n    key: 'getKeyAt',\n    value: function getKeyAt(property, time_in_seconds) {\n      return _.find(property.keys, function (key) {\n        return key.time === time_in_seconds;\n      });\n    }\n  }, {\n    key: 'setValue',\n    value: function setValue(property, new_val) {\n      var time_in_seconds = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var time = time_in_seconds;\n      if (time === false) {\n        time = this.timer.getCurrentTime() / 1000;\n      }\n      var key = this.getKeyAt(property, time);\n\n      if (key) {\n        // If we found a key, simply update the value.\n        key.val = new_val;\n      } else {\n        // If we are not on a key but the property has other keys,\n        // create it and add it to the keys array.\n        key = { val: new_val, time: time, _property: property };\n        if (this.options.defaultEase) {\n          key.ease = this.options.defaultEase;\n        }\n        property.keys.push(key);\n        // Also sort the keys.\n        property.keys = _Utils2.default.sortKeys(property.keys);\n      }\n    }\n  }, {\n    key: 'getTotalDuration',\n    value: function getTotalDuration() {\n      return this.orchestrator.getTotalDuration();\n    }\n  }, {\n    key: 'addOnEventListener',\n    value: function addOnEventListener(callback) {\n      this.orchestrator.onEvent.add(callback);\n    }\n  }, {\n    key: 'removeOnEventListener',\n    value: function removeOnEventListener(callback) {\n      this.orchestrator.onEvent.remove(callback);\n    }\n  }]);\n\n  return Core;\n}();\n\nmodule.exports = Core;//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Utils = function () {\n  function Utils() {\n    _classCallCheck(this, Utils);\n  }\n\n  _createClass(Utils, null, [{\n    key: 'formatMinutes',\n    value: function formatMinutes(d) {\n      // convert milliseconds to seconds\n      var seconds = d / 1000;\n      var hours = Math.floor(seconds / 3600);\n      var minutes = Math.floor((seconds - hours * 3600) / 60);\n      seconds = seconds - minutes * 60;\n      var output = seconds + 's';\n      if (minutes) {\n        output = minutes + 'm ' + output;\n      }\n      if (hours) {\n        output = hours + 'h ' + output;\n      }\n      return output;\n    }\n  }, {\n    key: 'getClosestTime',\n    value: function getClosestTime(data, time) {\n      var objectId = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var property_name = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var timer = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : false;\n      var tolerance = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 0.1;\n\n      if (timer) {\n        var timer_time = timer.getCurrentTime() / 1000;\n        if (Math.abs(timer_time - time) <= tolerance) {\n          return timer_time;\n        }\n      }\n\n      if (objectId || property_name) {\n        for (var i = 0; i < data.length; i++) {\n          var item = data[i];\n          // Don't match item with itself, but allow property to match item start/end.\n          if (item.id !== objectId || property_name) {\n            // First check start & end.\n            if (Math.abs(item.start - time) <= tolerance) {\n              return item.start;\n            }\n\n            if (Math.abs(item.end - time) <= tolerance) {\n              return item.end;\n            }\n          }\n\n          // Test properties keys\n          for (var j = 0; j < item.properties.length; j++) {\n            var prop = item.properties[j];\n\n            // Don't match property with itself.\n            if (prop.keys && (item.id !== objectId || prop.name !== property_name)) {\n              for (var k = 0; k < prop.keys.length; k++) {\n                var key = prop.keys[k];\n                if (Math.abs(key.time - time) <= tolerance) {\n                  return key.time;\n                }\n              }\n            }\n          }\n        }\n      }\n      return false;\n    }\n  }, {\n    key: 'getPreviousKey',\n    value: function getPreviousKey(keys, time) {\n      var prevKey = false;\n      for (var i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        if (key.time < time) {\n          prevKey = key;\n        } else {\n          return prevKey;\n        }\n      }\n      return prevKey;\n    }\n  }, {\n    key: 'sortKeys',\n    value: function sortKeys(keys) {\n      var compare = function compare(a, b) {\n        if (a.time < b.time) {\n          return -1;\n        }\n        if (a.time > b.time) {\n          return 1;\n        }\n        return 0;\n      };\n      return keys.sort(compare);\n    }\n  }, {\n    key: 'guid',\n    value: function guid() {\n      var s4 = function s4() {\n        return Math.floor((1 + Math.random()) * 0x10000).toString(16).substring(1);\n      };\n      return s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n    }\n  }]);\n\n  return Utils;\n}();\n\nexports.default = Utils;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb3JlL1V0aWxzLmpzPzhkMmYiXSwibmFtZXMiOlsiVXRpbHMiLCJkIiwic2Vjb25kcyIsImhvdXJzIiwiTWF0aCIsImZsb29yIiwibWludXRlcyIsIm91dHB1dCIsImRhdGEiLCJ0aW1lIiwib2JqZWN0SWQiLCJwcm9wZXJ0eV9uYW1lIiwidGltZXIiLCJ0b2xlcmFuY2UiLCJ0aW1lcl90aW1lIiwiZ2V0Q3VycmVudFRpbWUiLCJhYnMiLCJpIiwibGVuZ3RoIiwiaXRlbSIsImlkIiwic3RhcnQiLCJlbmQiLCJqIiwicHJvcGVydGllcyIsInByb3AiLCJrZXlzIiwibmFtZSIsImsiLCJrZXkiLCJwcmV2S2V5IiwiY29tcGFyZSIsImEiLCJiIiwic29ydCIsInM0IiwicmFuZG9tIiwidG9TdHJpbmciLCJzdWJzdHJpbmciXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7SUFBcUJBLEs7Ozs7Ozs7a0NBQ0VDLEMsRUFBRztBQUN0QjtBQUNBLFVBQUlDLFVBQVVELElBQUksSUFBbEI7QUFDQSxVQUFJRSxRQUFRQyxLQUFLQyxLQUFMLENBQVdILFVBQVUsSUFBckIsQ0FBWjtBQUNBLFVBQUlJLFVBQVVGLEtBQUtDLEtBQUwsQ0FBVyxDQUFDSCxVQUFVQyxRQUFRLElBQW5CLElBQTJCLEVBQXRDLENBQWQ7QUFDQUQsZ0JBQVVBLFVBQVVJLFVBQVUsRUFBOUI7QUFDQSxVQUFJQyxTQUFTTCxVQUFVLEdBQXZCO0FBQ0EsVUFBSUksT0FBSixFQUFhO0FBQ1hDLGlCQUFTRCxVQUFVLElBQVYsR0FBaUJDLE1BQTFCO0FBQ0Q7QUFDRCxVQUFJSixLQUFKLEVBQVc7QUFDVEksaUJBQVNKLFFBQVEsSUFBUixHQUFlSSxNQUF4QjtBQUNEO0FBQ0QsYUFBT0EsTUFBUDtBQUNEOzs7bUNBRXFCQyxJLEVBQU1DLEksRUFBK0U7QUFBQSxVQUF6RUMsUUFBeUUsdUVBQTlELEtBQThEO0FBQUEsVUFBdkRDLGFBQXVELHVFQUF2QyxLQUF1QztBQUFBLFVBQWhDQyxLQUFnQyx1RUFBeEIsS0FBd0I7QUFBQSxVQUFqQkMsU0FBaUIsdUVBQUwsR0FBSzs7QUFDekcsVUFBSUQsS0FBSixFQUFXO0FBQ1QsWUFBSUUsYUFBYUYsTUFBTUcsY0FBTixLQUF5QixJQUExQztBQUNBLFlBQUlYLEtBQUtZLEdBQUwsQ0FBU0YsYUFBYUwsSUFBdEIsS0FBK0JJLFNBQW5DLEVBQThDO0FBQzVDLGlCQUFPQyxVQUFQO0FBQ0Q7QUFDRjs7QUFFRCxVQUFJSixZQUFZQyxhQUFoQixFQUErQjtBQUM3QixhQUFLLElBQUlNLElBQUksQ0FBYixFQUFnQkEsSUFBSVQsS0FBS1UsTUFBekIsRUFBaUNELEdBQWpDLEVBQXNDO0FBQ3BDLGNBQUlFLE9BQU9YLEtBQUtTLENBQUwsQ0FBWDtBQUNBO0FBQ0EsY0FBSUUsS0FBS0MsRUFBTCxLQUFZVixRQUFaLElBQXdCQyxhQUE1QixFQUEyQztBQUN6QztBQUNBLGdCQUFJUCxLQUFLWSxHQUFMLENBQVNHLEtBQUtFLEtBQUwsR0FBYVosSUFBdEIsS0FBK0JJLFNBQW5DLEVBQThDO0FBQzVDLHFCQUFPTSxLQUFLRSxLQUFaO0FBQ0Q7O0FBRUQsZ0JBQUlqQixLQUFLWSxHQUFMLENBQVNHLEtBQUtHLEdBQUwsR0FBV2IsSUFBcEIsS0FBNkJJLFNBQWpDLEVBQTRDO0FBQzFDLHFCQUFPTSxLQUFLRyxHQUFaO0FBQ0Q7QUFDRjs7QUFFRDtBQUNBLGVBQUssSUFBSUMsSUFBSSxDQUFiLEVBQWdCQSxJQUFJSixLQUFLSyxVQUFMLENBQWdCTixNQUFwQyxFQUE0Q0ssR0FBNUMsRUFBaUQ7QUFDL0MsZ0JBQUlFLE9BQU9OLEtBQUtLLFVBQUwsQ0FBZ0JELENBQWhCLENBQVg7O0FBRUE7QUFDQSxnQkFBSUUsS0FBS0MsSUFBTCxLQUFjUCxLQUFLQyxFQUFMLEtBQVlWLFFBQVosSUFBd0JlLEtBQUtFLElBQUwsS0FBY2hCLGFBQXBELENBQUosRUFBd0U7QUFDdEUsbUJBQUssSUFBSWlCLElBQUksQ0FBYixFQUFnQkEsSUFBSUgsS0FBS0MsSUFBTCxDQUFVUixNQUE5QixFQUFzQ1UsR0FBdEMsRUFBMkM7QUFDekMsb0JBQUlDLE1BQU1KLEtBQUtDLElBQUwsQ0FBVUUsQ0FBVixDQUFWO0FBQ0Esb0JBQUl4QixLQUFLWSxHQUFMLENBQVNhLElBQUlwQixJQUFKLEdBQVdBLElBQXBCLEtBQTZCSSxTQUFqQyxFQUE0QztBQUMxQyx5QkFBT2dCLElBQUlwQixJQUFYO0FBQ0Q7QUFDRjtBQUNGO0FBQ0Y7QUFDRjtBQUNGO0FBQ0QsYUFBTyxLQUFQO0FBQ0Q7OzttQ0FFcUJpQixJLEVBQU1qQixJLEVBQU07QUFDaEMsVUFBSXFCLFVBQVUsS0FBZDtBQUNBLFdBQUssSUFBSWIsSUFBSSxDQUFiLEVBQWdCQSxJQUFJUyxLQUFLUixNQUF6QixFQUFpQ0QsR0FBakMsRUFBc0M7QUFDcEMsWUFBSVksTUFBTUgsS0FBS1QsQ0FBTCxDQUFWO0FBQ0EsWUFBSVksSUFBSXBCLElBQUosR0FBV0EsSUFBZixFQUFxQjtBQUNuQnFCLG9CQUFVRCxHQUFWO0FBQ0QsU0FGRCxNQUdLO0FBQ0gsaUJBQU9DLE9BQVA7QUFDRDtBQUNGO0FBQ0QsYUFBT0EsT0FBUDtBQUNEOzs7NkJBRWVKLEksRUFBTTtBQUNwQixVQUFJSyxVQUFVLFNBQVZBLE9BQVUsQ0FBU0MsQ0FBVCxFQUFZQyxDQUFaLEVBQWU7QUFDM0IsWUFBSUQsRUFBRXZCLElBQUYsR0FBU3dCLEVBQUV4QixJQUFmLEVBQXFCO0FBQ25CLGlCQUFPLENBQUMsQ0FBUjtBQUNEO0FBQ0QsWUFBSXVCLEVBQUV2QixJQUFGLEdBQVN3QixFQUFFeEIsSUFBZixFQUFxQjtBQUNuQixpQkFBTyxDQUFQO0FBQ0Q7QUFDRCxlQUFPLENBQVA7QUFDRCxPQVJEO0FBU0EsYUFBT2lCLEtBQUtRLElBQUwsQ0FBVUgsT0FBVixDQUFQO0FBQ0Q7OzsyQkFFYTtBQUNaLFVBQUlJLEtBQUssU0FBTEEsRUFBSyxHQUFXO0FBQ2xCLGVBQU8vQixLQUFLQyxLQUFMLENBQVcsQ0FBQyxJQUFJRCxLQUFLZ0MsTUFBTCxFQUFMLElBQXNCLE9BQWpDLEVBQTBDQyxRQUExQyxDQUFtRCxFQUFuRCxFQUF1REMsU0FBdkQsQ0FBaUUsQ0FBakUsQ0FBUDtBQUNELE9BRkQ7QUFHQSxhQUFPSCxPQUFPQSxJQUFQLEdBQWMsR0FBZCxHQUFvQkEsSUFBcEIsR0FBMkIsR0FBM0IsR0FBaUNBLElBQWpDLEdBQXdDLEdBQXhDLEdBQThDQSxJQUE5QyxHQUFxRCxHQUFyRCxHQUEyREEsSUFBM0QsR0FBa0VBLElBQWxFLEdBQXlFQSxJQUFoRjtBQUNEOzs7Ozs7a0JBM0ZrQm5DLEsiLCJmaWxlIjoiMS5qcyIsInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCBkZWZhdWx0IGNsYXNzIFV0aWxzIHtcbiAgc3RhdGljIGZvcm1hdE1pbnV0ZXMoZCkge1xuICAgIC8vIGNvbnZlcnQgbWlsbGlzZWNvbmRzIHRvIHNlY29uZHNcbiAgICBsZXQgc2Vjb25kcyA9IGQgLyAxMDAwO1xuICAgIGxldCBob3VycyA9IE1hdGguZmxvb3Ioc2Vjb25kcyAvIDM2MDApO1xuICAgIGxldCBtaW51dGVzID0gTWF0aC5mbG9vcigoc2Vjb25kcyAtIGhvdXJzICogMzYwMCkgLyA2MCk7XG4gICAgc2Vjb25kcyA9IHNlY29uZHMgLSBtaW51dGVzICogNjA7XG4gICAgbGV0IG91dHB1dCA9IHNlY29uZHMgKyAncyc7XG4gICAgaWYgKG1pbnV0ZXMpIHtcbiAgICAgIG91dHB1dCA9IG1pbnV0ZXMgKyAnbSAnICsgb3V0cHV0O1xuICAgIH1cbiAgICBpZiAoaG91cnMpIHtcbiAgICAgIG91dHB1dCA9IGhvdXJzICsgJ2ggJyArIG91dHB1dDtcbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dDtcbiAgfVxuXG4gIHN0YXRpYyBnZXRDbG9zZXN0VGltZShkYXRhLCB0aW1lLCBvYmplY3RJZCA9IGZhbHNlLCBwcm9wZXJ0eV9uYW1lID0gZmFsc2UsIHRpbWVyID0gZmFsc2UsIHRvbGVyYW5jZSA9IDAuMSkge1xuICAgIGlmICh0aW1lcikge1xuICAgICAgdmFyIHRpbWVyX3RpbWUgPSB0aW1lci5nZXRDdXJyZW50VGltZSgpIC8gMTAwMDtcbiAgICAgIGlmIChNYXRoLmFicyh0aW1lcl90aW1lIC0gdGltZSkgPD0gdG9sZXJhbmNlKSB7XG4gICAgICAgIHJldHVybiB0aW1lcl90aW1lO1xuICAgICAgfVxuICAgIH1cblxuICAgIGlmIChvYmplY3RJZCB8fCBwcm9wZXJ0eV9uYW1lKSB7XG4gICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRhdGEubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgdmFyIGl0ZW0gPSBkYXRhW2ldO1xuICAgICAgICAvLyBEb24ndCBtYXRjaCBpdGVtIHdpdGggaXRzZWxmLCBidXQgYWxsb3cgcHJvcGVydHkgdG8gbWF0Y2ggaXRlbSBzdGFydC9lbmQuXG4gICAgICAgIGlmIChpdGVtLmlkICE9PSBvYmplY3RJZCB8fCBwcm9wZXJ0eV9uYW1lKSB7XG4gICAgICAgICAgLy8gRmlyc3QgY2hlY2sgc3RhcnQgJiBlbmQuXG4gICAgICAgICAgaWYgKE1hdGguYWJzKGl0ZW0uc3RhcnQgLSB0aW1lKSA8PSB0b2xlcmFuY2UpIHtcbiAgICAgICAgICAgIHJldHVybiBpdGVtLnN0YXJ0O1xuICAgICAgICAgIH1cblxuICAgICAgICAgIGlmIChNYXRoLmFicyhpdGVtLmVuZCAtIHRpbWUpIDw9IHRvbGVyYW5jZSkge1xuICAgICAgICAgICAgcmV0dXJuIGl0ZW0uZW5kO1xuICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIFRlc3QgcHJvcGVydGllcyBrZXlzXG4gICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgaXRlbS5wcm9wZXJ0aWVzLmxlbmd0aDsgaisrKSB7XG4gICAgICAgICAgdmFyIHByb3AgPSBpdGVtLnByb3BlcnRpZXNbal07XG5cbiAgICAgICAgICAvLyBEb24ndCBtYXRjaCBwcm9wZXJ0eSB3aXRoIGl0c2VsZi5cbiAgICAgICAgICBpZiAocHJvcC5rZXlzICYmIChpdGVtLmlkICE9PSBvYmplY3RJZCB8fCBwcm9wLm5hbWUgIT09IHByb3BlcnR5X25hbWUpKSB7XG4gICAgICAgICAgICBmb3IgKHZhciBrID0gMDsgayA8IHByb3Aua2V5cy5sZW5ndGg7IGsrKykge1xuICAgICAgICAgICAgICB2YXIga2V5ID0gcHJvcC5rZXlzW2tdO1xuICAgICAgICAgICAgICBpZiAoTWF0aC5hYnMoa2V5LnRpbWUgLSB0aW1lKSA8PSB0b2xlcmFuY2UpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4ga2V5LnRpbWU7XG4gICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3RhdGljIGdldFByZXZpb3VzS2V5KGtleXMsIHRpbWUpIHtcbiAgICB2YXIgcHJldktleSA9IGZhbHNlO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwga2V5cy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGtleSA9IGtleXNbaV07XG4gICAgICBpZiAoa2V5LnRpbWUgPCB0aW1lKSB7XG4gICAgICAgIHByZXZLZXkgPSBrZXk7XG4gICAgICB9XG4gICAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIHByZXZLZXk7XG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBwcmV2S2V5O1xuICB9XG5cbiAgc3RhdGljIHNvcnRLZXlzKGtleXMpIHtcbiAgICB2YXIgY29tcGFyZSA9IGZ1bmN0aW9uKGEsIGIpIHtcbiAgICAgIGlmIChhLnRpbWUgPCBiLnRpbWUpIHtcbiAgICAgICAgcmV0dXJuIC0xO1xuICAgICAgfVxuICAgICAgaWYgKGEudGltZSA+IGIudGltZSkge1xuICAgICAgICByZXR1cm4gMTtcbiAgICAgIH1cbiAgICAgIHJldHVybiAwO1xuICAgIH07XG4gICAgcmV0dXJuIGtleXMuc29ydChjb21wYXJlKTtcbiAgfVxuXG4gIHN0YXRpYyBndWlkKCkge1xuICAgIHZhciBzNCA9IGZ1bmN0aW9uKCkge1xuICAgICAgcmV0dXJuIE1hdGguZmxvb3IoKDEgKyBNYXRoLnJhbmRvbSgpKSAqIDB4MTAwMDApLnRvU3RyaW5nKDE2KS5zdWJzdHJpbmcoMSk7XG4gICAgfTtcbiAgICByZXR1cm4gczQoKSArIHM0KCkgKyAnLScgKyBzNCgpICsgJy0nICsgczQoKSArICctJyArIHM0KCkgKyAnLScgKyBzNCgpICsgczQoKSArIHM0KCk7XG4gIH1cbn1cblxuXG5cbi8vIFdFQlBBQ0sgRk9PVEVSIC8vXG4vLyAuL2NvcmUvVXRpbHMuanMiXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports,__webpack_require__){eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Signals = __webpack_require__(6);\n\nvar Timer = function () {\n  function Timer() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Timer);\n\n    // in millisecond\n    this.totalDuration = options.totalDuration || 240 * 1000;\n    // Use an array for the time for easier d3.js integration (used as data for timeseeker).\n    this.time = [0];\n    this.is_playing = false;\n    this.last_timeStamp = -1;\n    this.last_time = -1;\n    this.updated = new Signals.Signal();\n    this.preStatusChanged = new Signals.Signal();\n    this.statusChanged = new Signals.Signal();\n    this.durationChanged = new Signals.Signal();\n    this.seeked = new Signals.Signal();\n    this.update = this.update.bind(this);\n    window.requestAnimationFrame(this.update);\n  }\n\n  _createClass(Timer, [{\n    key: 'getCurrentTime',\n    value: function getCurrentTime() {\n      return this.time[0];\n    }\n  }, {\n    key: 'getDuration',\n    value: function getDuration() {\n      return this.totalDuration / 1000;\n    }\n  }, {\n    key: 'setDuration',\n    value: function setDuration(seconds) {\n      this.totalDuration = seconds * 1000;\n      this.durationChanged.dispatch(seconds);\n    }\n  }, {\n    key: 'play',\n    value: function play() {\n      var _this = this;\n\n      this.preStatusChanged.dispatch(true);\n      setImmediate(function () {\n        _this.is_playing = true;\n        _this.statusChanged.dispatch(_this.is_playing);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this2 = this;\n\n      this.preStatusChanged.dispatch(false);\n      setImmediate(function () {\n        _this2.is_playing = false;\n        _this2.statusChanged.dispatch(_this2.is_playing);\n      });\n    }\n  }, {\n    key: 'toggle',\n    value: function toggle() {\n      var _this3 = this;\n\n      this.preStatusChanged.dispatch(!this.is_playing);\n      setImmediate(function () {\n        _this3.is_playing = !_this3.is_playing;\n        _this3.statusChanged.dispatch(_this3.is_playing);\n      });\n    }\n  }, {\n    key: 'seek',\n    value: function seek(time) {\n      this.time[0] = time[0];\n      this.seeked.dispatch(this.time[0]);\n    }\n  }, {\n    key: 'update',\n    value: function update() {\n      // Init timestamp\n\n      // the argument timestamp is too old, if we have a long time task on click on\n      // play button's click handler. so re-fetch the current timestamp here again.\n      var timestamp = performance.now();\n      if (this.last_timeStamp === -1) {\n        this.last_timeStamp = timestamp;\n      }\n      var elapsed = timestamp - this.last_timeStamp;\n\n      if (this.is_playing) {\n        this.time[0] += elapsed;\n      }\n\n      if (this.time[0] >= this.totalDuration) {\n        // Stop timer when reaching the end.\n        this.time[0] = this.totalDuration;\n        this.stop();\n      }\n\n      this.updated.dispatch(this.time[0], this.is_playing ? elapsed : 0);\n\n      this.last_timeStamp = timestamp;\n      this.last_time = this.time[0];\n      window.requestAnimationFrame(this.update);\n    }\n  }]);\n\n  return Timer;\n}();\n\nexports.default = Timer;\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(3).setImmediate))//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jb3JlL1RpbWVyLmpzP2Q0YmUiXSwibmFtZXMiOlsiU2lnbmFscyIsInJlcXVpcmUiLCJUaW1lciIsIm9wdGlvbnMiLCJ0b3RhbER1cmF0aW9uIiwidGltZSIsImlzX3BsYXlpbmciLCJsYXN0X3RpbWVTdGFtcCIsImxhc3RfdGltZSIsInVwZGF0ZWQiLCJTaWduYWwiLCJwcmVTdGF0dXNDaGFuZ2VkIiwic3RhdHVzQ2hhbmdlZCIsImR1cmF0aW9uQ2hhbmdlZCIsInNlZWtlZCIsInVwZGF0ZSIsImJpbmQiLCJ3aW5kb3ciLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJzZWNvbmRzIiwiZGlzcGF0Y2giLCJzZXRJbW1lZGlhdGUiLCJ0aW1lc3RhbXAiLCJwZXJmb3JtYW5jZSIsIm5vdyIsImVsYXBzZWQiLCJzdG9wIl0sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBQUEsSUFBSUEsVUFBVSxtQkFBQUMsQ0FBUSxDQUFSLENBQWQ7O0lBRXFCQyxLO0FBQ25CLG1CQUEwQjtBQUFBLFFBQWRDLE9BQWMsdUVBQUosRUFBSTs7QUFBQTs7QUFDeEI7QUFDQSxTQUFLQyxhQUFMLEdBQXFCRCxRQUFRQyxhQUFSLElBQXlCLE1BQU0sSUFBcEQ7QUFDQTtBQUNBLFNBQUtDLElBQUwsR0FBWSxDQUFDLENBQUQsQ0FBWjtBQUNBLFNBQUtDLFVBQUwsR0FBa0IsS0FBbEI7QUFDQSxTQUFLQyxjQUFMLEdBQXNCLENBQUMsQ0FBdkI7QUFDQSxTQUFLQyxTQUFMLEdBQWlCLENBQUMsQ0FBbEI7QUFDQSxTQUFLQyxPQUFMLEdBQWUsSUFBSVQsUUFBUVUsTUFBWixFQUFmO0FBQ0EsU0FBS0MsZ0JBQUwsR0FBd0IsSUFBSVgsUUFBUVUsTUFBWixFQUF4QjtBQUNBLFNBQUtFLGFBQUwsR0FBcUIsSUFBSVosUUFBUVUsTUFBWixFQUFyQjtBQUNBLFNBQUtHLGVBQUwsR0FBdUIsSUFBSWIsUUFBUVUsTUFBWixFQUF2QjtBQUNBLFNBQUtJLE1BQUwsR0FBYyxJQUFJZCxRQUFRVSxNQUFaLEVBQWQ7QUFDQSxTQUFLSyxNQUFMLEdBQWMsS0FBS0EsTUFBTCxDQUFZQyxJQUFaLENBQWlCLElBQWpCLENBQWQ7QUFDQUMsV0FBT0MscUJBQVAsQ0FBNkIsS0FBS0gsTUFBbEM7QUFDRDs7OztxQ0FFZ0I7QUFDZixhQUFPLEtBQUtWLElBQUwsQ0FBVSxDQUFWLENBQVA7QUFDRDs7O2tDQUVhO0FBQ1osYUFBTyxLQUFLRCxhQUFMLEdBQXFCLElBQTVCO0FBQ0Q7OztnQ0FFV2UsTyxFQUFTO0FBQ25CLFdBQUtmLGFBQUwsR0FBcUJlLFVBQVUsSUFBL0I7QUFDQSxXQUFLTixlQUFMLENBQXFCTyxRQUFyQixDQUE4QkQsT0FBOUI7QUFDRDs7OzJCQUVNO0FBQUE7O0FBQ0wsV0FBS1IsZ0JBQUwsQ0FBc0JTLFFBQXRCLENBQStCLElBQS9CO0FBQ0FDLG1CQUFhLFlBQU07QUFDakIsY0FBS2YsVUFBTCxHQUFrQixJQUFsQjtBQUNBLGNBQUtNLGFBQUwsQ0FBbUJRLFFBQW5CLENBQTRCLE1BQUtkLFVBQWpDO0FBQ0QsT0FIRDtBQUlEOzs7MkJBRU07QUFBQTs7QUFDTCxXQUFLSyxnQkFBTCxDQUFzQlMsUUFBdEIsQ0FBK0IsS0FBL0I7QUFDQUMsbUJBQWEsWUFBTTtBQUNqQixlQUFLZixVQUFMLEdBQWtCLEtBQWxCO0FBQ0EsZUFBS00sYUFBTCxDQUFtQlEsUUFBbkIsQ0FBNEIsT0FBS2QsVUFBakM7QUFDRCxPQUhEO0FBSUQ7Ozs2QkFFUTtBQUFBOztBQUNQLFdBQUtLLGdCQUFMLENBQXNCUyxRQUF0QixDQUErQixDQUFDLEtBQUtkLFVBQXJDO0FBQ0FlLG1CQUFhLFlBQU07QUFDakIsZUFBS2YsVUFBTCxHQUFrQixDQUFDLE9BQUtBLFVBQXhCO0FBQ0EsZUFBS00sYUFBTCxDQUFtQlEsUUFBbkIsQ0FBNEIsT0FBS2QsVUFBakM7QUFDRCxPQUhEO0FBSUQ7Ozt5QkFFSUQsSSxFQUFNO0FBQ1QsV0FBS0EsSUFBTCxDQUFVLENBQVYsSUFBZUEsS0FBSyxDQUFMLENBQWY7QUFDQSxXQUFLUyxNQUFMLENBQVlNLFFBQVosQ0FBcUIsS0FBS2YsSUFBTCxDQUFVLENBQVYsQ0FBckI7QUFDRDs7OzZCQUVRO0FBQ1A7O0FBRUE7QUFDQTtBQUNBLFVBQUlpQixZQUFZQyxZQUFZQyxHQUFaLEVBQWhCO0FBQ0EsVUFBSSxLQUFLakIsY0FBTCxLQUF3QixDQUFDLENBQTdCLEVBQWdDO0FBQzlCLGFBQUtBLGNBQUwsR0FBc0JlLFNBQXRCO0FBQ0Q7QUFDRCxVQUFJRyxVQUFVSCxZQUFZLEtBQUtmLGNBQS9COztBQUVBLFVBQUksS0FBS0QsVUFBVCxFQUFxQjtBQUNuQixhQUFLRCxJQUFMLENBQVUsQ0FBVixLQUFnQm9CLE9BQWhCO0FBQ0Q7O0FBRUQsVUFBSSxLQUFLcEIsSUFBTCxDQUFVLENBQVYsS0FBZ0IsS0FBS0QsYUFBekIsRUFBd0M7QUFDdEM7QUFDQSxhQUFLQyxJQUFMLENBQVUsQ0FBVixJQUFlLEtBQUtELGFBQXBCO0FBQ0EsYUFBS3NCLElBQUw7QUFDRDs7QUFFRCxXQUFLakIsT0FBTCxDQUFhVyxRQUFiLENBQXNCLEtBQUtmLElBQUwsQ0FBVSxDQUFWLENBQXRCLEVBQW9DLEtBQUtDLFVBQUwsR0FBa0JtQixPQUFsQixHQUE0QixDQUFoRTs7QUFFQSxXQUFLbEIsY0FBTCxHQUFzQmUsU0FBdEI7QUFDQSxXQUFLZCxTQUFMLEdBQWlCLEtBQUtILElBQUwsQ0FBVSxDQUFWLENBQWpCO0FBQ0FZLGFBQU9DLHFCQUFQLENBQTZCLEtBQUtILE1BQWxDO0FBQ0Q7Ozs7OztrQkF0RmtCYixLIiwiZmlsZSI6IjIuanMiLCJzb3VyY2VzQ29udGVudCI6WyJsZXQgU2lnbmFscyA9IHJlcXVpcmUoJ2pzLXNpZ25hbHMnKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVGltZXIge1xuICBjb25zdHJ1Y3RvcihvcHRpb25zID0ge30pIHtcbiAgICAvLyBpbiBtaWxsaXNlY29uZFxuICAgIHRoaXMudG90YWxEdXJhdGlvbiA9IG9wdGlvbnMudG90YWxEdXJhdGlvbiB8fCAyNDAgKiAxMDAwO1xuICAgIC8vIFVzZSBhbiBhcnJheSBmb3IgdGhlIHRpbWUgZm9yIGVhc2llciBkMy5qcyBpbnRlZ3JhdGlvbiAodXNlZCBhcyBkYXRhIGZvciB0aW1lc2Vla2VyKS5cbiAgICB0aGlzLnRpbWUgPSBbMF07XG4gICAgdGhpcy5pc19wbGF5aW5nID0gZmFsc2U7XG4gICAgdGhpcy5sYXN0X3RpbWVTdGFtcCA9IC0xO1xuICAgIHRoaXMubGFzdF90aW1lID0gLTE7XG4gICAgdGhpcy51cGRhdGVkID0gbmV3IFNpZ25hbHMuU2lnbmFsKCk7XG4gICAgdGhpcy5wcmVTdGF0dXNDaGFuZ2VkID0gbmV3IFNpZ25hbHMuU2lnbmFsKCk7XG4gICAgdGhpcy5zdGF0dXNDaGFuZ2VkID0gbmV3IFNpZ25hbHMuU2lnbmFsKCk7XG4gICAgdGhpcy5kdXJhdGlvbkNoYW5nZWQgPSBuZXcgU2lnbmFscy5TaWduYWwoKTtcbiAgICB0aGlzLnNlZWtlZCA9IG5ldyBTaWduYWxzLlNpZ25hbCgpO1xuICAgIHRoaXMudXBkYXRlID0gdGhpcy51cGRhdGUuYmluZCh0aGlzKTtcbiAgICB3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lKHRoaXMudXBkYXRlKTtcbiAgfVxuXG4gIGdldEN1cnJlbnRUaW1lKCkge1xuICAgIHJldHVybiB0aGlzLnRpbWVbMF07XG4gIH1cblxuICBnZXREdXJhdGlvbigpIHtcbiAgICByZXR1cm4gdGhpcy50b3RhbER1cmF0aW9uIC8gMTAwMDtcbiAgfVxuXG4gIHNldER1cmF0aW9uKHNlY29uZHMpIHtcbiAgICB0aGlzLnRvdGFsRHVyYXRpb24gPSBzZWNvbmRzICogMTAwMDtcbiAgICB0aGlzLmR1cmF0aW9uQ2hhbmdlZC5kaXNwYXRjaChzZWNvbmRzKTtcbiAgfVxuXG4gIHBsYXkoKSB7XG4gICAgdGhpcy5wcmVTdGF0dXNDaGFuZ2VkLmRpc3BhdGNoKHRydWUpO1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICB0aGlzLmlzX3BsYXlpbmcgPSB0cnVlO1xuICAgICAgdGhpcy5zdGF0dXNDaGFuZ2VkLmRpc3BhdGNoKHRoaXMuaXNfcGxheWluZyk7XG4gICAgfSk7XG4gIH1cblxuICBzdG9wKCkge1xuICAgIHRoaXMucHJlU3RhdHVzQ2hhbmdlZC5kaXNwYXRjaChmYWxzZSk7XG4gICAgc2V0SW1tZWRpYXRlKCgpID0+IHtcbiAgICAgIHRoaXMuaXNfcGxheWluZyA9IGZhbHNlO1xuICAgICAgdGhpcy5zdGF0dXNDaGFuZ2VkLmRpc3BhdGNoKHRoaXMuaXNfcGxheWluZyk7XG4gICAgfSk7XG4gIH1cblxuICB0b2dnbGUoKSB7XG4gICAgdGhpcy5wcmVTdGF0dXNDaGFuZ2VkLmRpc3BhdGNoKCF0aGlzLmlzX3BsYXlpbmcpO1xuICAgIHNldEltbWVkaWF0ZSgoKSA9PiB7XG4gICAgICB0aGlzLmlzX3BsYXlpbmcgPSAhdGhpcy5pc19wbGF5aW5nO1xuICAgICAgdGhpcy5zdGF0dXNDaGFuZ2VkLmRpc3BhdGNoKHRoaXMuaXNfcGxheWluZyk7XG4gICAgfSk7XG4gIH1cblxuICBzZWVrKHRpbWUpIHtcbiAgICB0aGlzLnRpbWVbMF0gPSB0aW1lWzBdO1xuICAgIHRoaXMuc2Vla2VkLmRpc3BhdGNoKHRoaXMudGltZVswXSk7XG4gIH1cblxuICB1cGRhdGUoKSB7XG4gICAgLy8gSW5pdCB0aW1lc3RhbXBcblxuICAgIC8vIHRoZSBhcmd1bWVudCB0aW1lc3RhbXAgaXMgdG9vIG9sZCwgaWYgd2UgaGF2ZSBhIGxvbmcgdGltZSB0YXNrIG9uIGNsaWNrIG9uXG4gICAgLy8gcGxheSBidXR0b24ncyBjbGljayBoYW5kbGVyLiBzbyByZS1mZXRjaCB0aGUgY3VycmVudCB0aW1lc3RhbXAgaGVyZSBhZ2Fpbi5cbiAgICBsZXQgdGltZXN0YW1wID0gcGVyZm9ybWFuY2Uubm93KCk7XG4gICAgaWYgKHRoaXMubGFzdF90aW1lU3RhbXAgPT09IC0xKSB7XG4gICAgICB0aGlzLmxhc3RfdGltZVN0YW1wID0gdGltZXN0YW1wO1xuICAgIH1cbiAgICB2YXIgZWxhcHNlZCA9IHRpbWVzdGFtcCAtIHRoaXMubGFzdF90aW1lU3RhbXA7XG5cbiAgICBpZiAodGhpcy5pc19wbGF5aW5nKSB7XG4gICAgICB0aGlzLnRpbWVbMF0gKz0gZWxhcHNlZDtcbiAgICB9XG5cbiAgICBpZiAodGhpcy50aW1lWzBdID49IHRoaXMudG90YWxEdXJhdGlvbikge1xuICAgICAgLy8gU3RvcCB0aW1lciB3aGVuIHJlYWNoaW5nIHRoZSBlbmQuXG4gICAgICB0aGlzLnRpbWVbMF0gPSB0aGlzLnRvdGFsRHVyYXRpb247XG4gICAgICB0aGlzLnN0b3AoKTtcbiAgICB9XG5cbiAgICB0aGlzLnVwZGF0ZWQuZGlzcGF0Y2godGhpcy50aW1lWzBdLCB0aGlzLmlzX3BsYXlpbmcgPyBlbGFwc2VkIDogMCk7XG5cbiAgICB0aGlzLmxhc3RfdGltZVN0YW1wID0gdGltZXN0YW1wO1xuICAgIHRoaXMubGFzdF90aW1lID0gdGhpcy50aW1lWzBdO1xuICAgIHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUodGhpcy51cGRhdGUpO1xuICB9XG59XG5cblxuXG4vLyBXRUJQQUNLIEZPT1RFUiAvL1xuLy8gLi9jb3JlL1RpbWVyLmpzIl0sInNvdXJjZVJvb3QiOiIifQ==");
},function(module,exports,__webpack_require__){eval("var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\n__webpack_require__(4);\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vL1VzZXJzL2RhdmlkL1NpdGVzL1R3ZWVuVGltZS9+L3RpbWVycy1icm93c2VyaWZ5L21haW4uanM/NTRlMyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7QUFFQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBIiwiZmlsZSI6IjMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgYXBwbHkgPSBGdW5jdGlvbi5wcm90b3R5cGUuYXBwbHk7XG5cbi8vIERPTSBBUElzLCBmb3IgY29tcGxldGVuZXNzXG5cbmV4cG9ydHMuc2V0VGltZW91dCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRUaW1lb3V0LCB3aW5kb3csIGFyZ3VtZW50cyksIGNsZWFyVGltZW91dCk7XG59O1xuZXhwb3J0cy5zZXRJbnRlcnZhbCA9IGZ1bmN0aW9uKCkge1xuICByZXR1cm4gbmV3IFRpbWVvdXQoYXBwbHkuY2FsbChzZXRJbnRlcnZhbCwgd2luZG93LCBhcmd1bWVudHMpLCBjbGVhckludGVydmFsKTtcbn07XG5leHBvcnRzLmNsZWFyVGltZW91dCA9XG5leHBvcnRzLmNsZWFySW50ZXJ2YWwgPSBmdW5jdGlvbih0aW1lb3V0KSB7XG4gIGlmICh0aW1lb3V0KSB7XG4gICAgdGltZW91dC5jbG9zZSgpO1xuICB9XG59O1xuXG5mdW5jdGlvbiBUaW1lb3V0KGlkLCBjbGVhckZuKSB7XG4gIHRoaXMuX2lkID0gaWQ7XG4gIHRoaXMuX2NsZWFyRm4gPSBjbGVhckZuO1xufVxuVGltZW91dC5wcm90b3R5cGUudW5yZWYgPSBUaW1lb3V0LnByb3RvdHlwZS5yZWYgPSBmdW5jdGlvbigpIHt9O1xuVGltZW91dC5wcm90b3R5cGUuY2xvc2UgPSBmdW5jdGlvbigpIHtcbiAgdGhpcy5fY2xlYXJGbi5jYWxsKHdpbmRvdywgdGhpcy5faWQpO1xufTtcblxuLy8gRG9lcyBub3Qgc3RhcnQgdGhlIHRpbWUsIGp1c3Qgc2V0cyB1cCB0aGUgbWVtYmVycyBuZWVkZWQuXG5leHBvcnRzLmVucm9sbCA9IGZ1bmN0aW9uKGl0ZW0sIG1zZWNzKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSBtc2Vjcztcbn07XG5cbmV4cG9ydHMudW5lbnJvbGwgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcbiAgaXRlbS5faWRsZVRpbWVvdXQgPSAtMTtcbn07XG5cbmV4cG9ydHMuX3VucmVmQWN0aXZlID0gZXhwb3J0cy5hY3RpdmUgPSBmdW5jdGlvbihpdGVtKSB7XG4gIGNsZWFyVGltZW91dChpdGVtLl9pZGxlVGltZW91dElkKTtcblxuICB2YXIgbXNlY3MgPSBpdGVtLl9pZGxlVGltZW91dDtcbiAgaWYgKG1zZWNzID49IDApIHtcbiAgICBpdGVtLl9pZGxlVGltZW91dElkID0gc2V0VGltZW91dChmdW5jdGlvbiBvblRpbWVvdXQoKSB7XG4gICAgICBpZiAoaXRlbS5fb25UaW1lb3V0KVxuICAgICAgICBpdGVtLl9vblRpbWVvdXQoKTtcbiAgICB9LCBtc2Vjcyk7XG4gIH1cbn07XG5cbi8vIHNldGltbWVkaWF0ZSBhdHRhY2hlcyBpdHNlbGYgdG8gdGhlIGdsb2JhbCBvYmplY3RcbnJlcXVpcmUoXCJzZXRpbW1lZGlhdGVcIik7XG5leHBvcnRzLnNldEltbWVkaWF0ZSA9IHNldEltbWVkaWF0ZTtcbmV4cG9ydHMuY2xlYXJJbW1lZGlhdGUgPSBjbGVhckltbWVkaWF0ZTtcblxuXG5cbi8vLy8vLy8vLy8vLy8vLy8vL1xuLy8gV0VCUEFDSyBGT09URVJcbi8vIC9Vc2Vycy9kYXZpZC9TaXRlcy9Ud2VlblRpbWUvfi90aW1lcnMtYnJvd3NlcmlmeS9tYWluLmpzXG4vLyBtb2R1bGUgaWQgPSAzXG4vLyBtb2R1bGUgY2h1bmtzID0gMCJdLCJzb3VyY2VSb290IjoiIn0=")},function(module,exports,__webpack_require__){eval('/* WEBPACK VAR INJECTION */(function(global, process) {(function (global, undefined) {\n    "use strict";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== "function") {\n        callback = new Function("" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: "Wait until any invocations of this algorithm started before this one have completed."\n        // So if we\'re currently running a task, we\'ll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // "too much recursion" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can\'t be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage("", "*");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = "setImmediate$" + Math.random() + "$";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === "string" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener("message", onGlobalMessage, false);\n        } else {\n            global.attachEvent("onmessage", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, "*");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it\'s been called.\n            var script = doc.createElement("script");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don\'t get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === "[object process]") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && "onreadystatechange" in doc.createElement("script")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === "undefined" ? typeof global === "undefined" ? this : global : self));\n\n/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(5)))//# sourceMappingURL=data:application/json;charset=utf-8;base64,')},function(module,exports){eval("// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,");
},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE_6__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwic2lnbmFsc1wiLFwiY29tbW9uanNcIjpcInNpZ25hbHNcIixcImNvbW1vbmpzMlwiOlwic2lnbmFsc1wiLFwiYW1kXCI6XCJzaWduYWxzXCJ9PzkwMzgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNi5qcyIsInNvdXJjZXNDb250ZW50IjpbIm1vZHVsZS5leHBvcnRzID0gX19XRUJQQUNLX0VYVEVSTkFMX01PRFVMRV82X187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwge1wicm9vdFwiOlwic2lnbmFsc1wiLFwiY29tbW9uanNcIjpcInNpZ25hbHNcIixcImNvbW1vbmpzMlwiOlwic2lnbmFsc1wiLFwiYW1kXCI6XCJzaWduYWxzXCJ9XG4vLyBtb2R1bGUgaWQgPSA2XG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports,__webpack_require__){eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar Signals = __webpack_require__(6);\nvar TweenMax = __webpack_require__(8);\nvar TimelineMax = __webpack_require__(9);\nvar Quad = __webpack_require__(10);\n\nvar Orchestrator = function () {\n  function Orchestrator(timer, data) {\n    _classCallCheck(this, Orchestrator);\n\n    this.update = this.update.bind(this);\n    this.timer = timer;\n    this.data = data;\n    this.mainTimeline = new TimelineMax({ paused: true });\n    this.onUpdate = new Signals.Signal();\n    this.timer.updated.add(this.update);\n    this.update(0);\n    this.onEvent = new Signals.Signal();\n  }\n\n  _createClass(Orchestrator, [{\n    key: 'addUpdateListener',\n    value: function addUpdateListener(listener) {\n      this.onUpdate.add(listener);\n    }\n  }, {\n    key: 'removeUpdateListener',\n    value: function removeUpdateListener(listener) {\n      this.onUpdate.remove(listener);\n    }\n  }, {\n    key: 'setData',\n    value: function setData(data) {\n      this.data = data;\n    }\n  }, {\n    key: 'getTotalDuration',\n    value: function getTotalDuration() {\n      return this.mainTimeline.totalDuration();\n    }\n  }, {\n    key: 'getEasing',\n    value: function getEasing() {\n      var key = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (key && key.ease) {\n        var ease_index = key.ease.split('.');\n        if (ease_index.length === 2 && window[ease_index[0]] && window[ease_index[0]][ease_index[1]]) {\n          return window[ease_index[0]][ease_index[1]];\n        }\n      }\n      return Quad.easeOut;\n    }\n  }, {\n    key: 'initSpecialProperties',\n    value: function initSpecialProperties(item) {\n      // Add a dom element for color tweening and other css properties.\n      item._domHelper = document.createElement('div');\n      for (var property_key = 0; property_key < item.properties.length; property_key++) {\n        var property = item.properties[property_key];\n        // Setup special properties\n        if (property.type && property.type === 'color') {\n          // If the property is a color mark it as css\n          property.css = true;\n        }\n\n        if (property.css) {\n          // If property is a css or a color value apply it to the domHelper element.\n          item._domHelper.style[property.name] = property.val;\n        }\n      }\n    }\n  }, {\n    key: 'initItemValues',\n    value: function initItemValues(item) {\n      item.values = {};\n      // item._isDirty = true\n      for (var property_key = 0; property_key < item.properties.length; property_key++) {\n        var property = item.properties[property_key];\n        if (property.keys.length) {\n          // Take the value of the first key as initial value.\n          // this.todo: update this when the value of the first key change. (when rebuilding the timeline, simply delete item.values before item._timeline)\n          property.val = property.keys[0].val;\n        }\n        item.values[property.name] = property.val;\n      }\n    }\n  }, {\n    key: 'update',\n    value: function update(timestamp, elapsed) {\n      var seconds = timestamp / 1000;\n      var seconds_elapsed = elapsed / 1000;\n\n      var has_dirty_items = false;\n\n      for (var i = 0; i < this.data.length; i++) {\n        var item = this.data[i];\n        if (!item._domHelper) {\n          this.initSpecialProperties(item);\n        }\n\n        // create the values object to contain all properties\n        if (!item.values) {\n          this.initItemValues(item);\n        }\n\n        // Create the timeline if needed\n        if (!item._timeline) {\n          item._timeline = new TimelineMax();\n          this.mainTimeline.add(item._timeline, 0);\n          item._isDirty = true;\n        }\n\n        if (item._isDirty) {\n          has_dirty_items = true;\n        }\n\n        if (item._timeline && item._isDirty && item.properties) {\n          item._isDirty = false;\n          // item._timeline.clear();\n\n          for (var property_key = 0; property_key < item.properties.length; property_key++) {\n            var property = item.properties[property_key];\n            if (property._timeline) {\n              property._timeline.clear();\n            } else {\n              property._timeline = new TimelineMax();\n              item._timeline.add(property._timeline, 0);\n            }\n\n            var propertyTimeline = property._timeline;\n            var propName = property.name;\n\n            // If there is no key stop there and set value to default.\n            if (!property.keys.length) {\n              item.values[property.name] = property.val;\n              continue;\n            }\n\n            // Set the data values target object.\n            var data_target = item.values;\n            // Add a inital key, even if there is no animation to set the value from time 0.\n            var first_key = property.keys[0];\n\n            var tween_time = 0;\n            if (first_key) {\n              tween_time = Math.min(-1, first_key.time - 0.1);\n            }\n\n            var tween_duration = 0;\n            var val = {};\n            var easing = this.getEasing();\n            val.ease = easing;\n\n            if (property.css) {\n              data_target = item._domHelper;\n              val.css = {};\n              val.css[propName] = first_key ? first_key.val : property.val;\n            } else {\n              val[propName] = first_key ? first_key.val : property.val;\n            }\n\n            var tween = TweenMax.to(data_target, tween_duration, val);\n            propertyTimeline.add(tween, tween_time);\n\n            for (var key_index = 0; key_index < property.keys.length; key_index++) {\n              var key = property.keys[key_index];\n\n              if (key_index < property.keys.length - 1) {\n                var next_key = property.keys[key_index + 1];\n                tween_duration = next_key.time - key.time;\n\n                val = {};\n                easing = this.getEasing(next_key);\n                val.ease = easing;\n                if (property.css) {\n                  val.css = {};\n                  val.css[propName] = next_key.val;\n                } else {\n                  val[propName] = next_key.val;\n                }\n\n                tween = TweenMax.to(data_target, tween_duration, val);\n                propertyTimeline.add(tween, key.time);\n              }\n            }\n\n            // Directly seek the property timeline to update the value.\n            propertyTimeline.seek(seconds);\n          }\n          // Force main timeline to refresh but never try to go to < 0\n          // to prevent glitches when current time is 0.\n          if (seconds > 0) {\n            seconds = seconds - 0.0000001;\n          } else {\n            seconds = seconds + 0.0000001;\n          }\n        }\n      }\n\n      // Finally update the main timeline.\n      this.mainTimeline.seek(seconds);\n\n      // check if event type property to be fired\n      for (var _i = 0; _i < this.data.length; _i++) {\n        var _item = this.data[_i];\n        for (var _property_key = 0; _property_key < _item.properties.length; _property_key++) {\n          var _property = _item.properties[_property_key];\n          if (_property.type !== 'event') {\n            continue;\n          }\n          for (var _key_index = 0; _key_index < _property.keys.length; _key_index++) {\n            var _key = _property.keys[_key_index];\n            if (seconds_elapsed > 0 && _key.time <= seconds && _key.time > seconds - seconds_elapsed) {\n              this.onEvent.dispatch(_property.name, _key.val);\n            }\n          }\n        }\n      }\n\n      // update the css properties.\n      for (var _i2 = 0; _i2 < this.data.length; _i2++) {\n        var _item2 = this.data[_i2];\n        for (var _property_key2 = 0; _property_key2 < _item2.properties.length; _property_key2++) {\n          var _property2 = _item2.properties[_property_key2];\n          if (_property2.css && _property2.keys.length) {\n            // Only css values.\n            _item2.values[_property2.name] = _item2._domHelper.style[_property2.name];\n          }\n        }\n      }\n\n      if (has_dirty_items) {\n        this.onUpdate.dispatch();\n      }\n    }\n  }]);\n\n  return Orchestrator;\n}();\n\nexports.default = Orchestrator;//# sourceMappingURL=data:application/json;charset=utf-8;base64,")},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE_8__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiVHdlZW5NYXhcIixcImNvbW1vbmpzXCI6W1wiZ3NhcFwiLFwiVHdlZW5NYXhcIl0sXCJjb21tb25qczJcIjpbXCJnc2FwXCIsXCJUd2Vlbk1heFwiXSxcImFtZFwiOlwiVHdlZW5NYXhcIn0/Y2JlYSJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI4LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzhfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCB7XCJyb290XCI6XCJUd2Vlbk1heFwiLFwiY29tbW9uanNcIjpbXCJnc2FwXCIsXCJUd2Vlbk1heFwiXSxcImNvbW1vbmpzMlwiOltcImdzYXBcIixcIlR3ZWVuTWF4XCJdLFwiYW1kXCI6XCJUd2Vlbk1heFwifVxuLy8gbW9kdWxlIGlkID0gOFxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE_9__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiVGltZWxpbmVNYXhcIixcImNvbW1vbmpzXCI6W1wiZ3NhcFwiLFwiVGltZWxpbmVNYXhcIl0sXCJjb21tb25qczJcIjpbXCJnc2FwXCIsXCJUaW1lbGluZU1heFwiXSxcImFtZFwiOlwiVGltZWxpbmVNYXhcIn0/MjgwYiJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSIsImZpbGUiOiI5LmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzlfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCB7XCJyb290XCI6XCJUaW1lbGluZU1heFwiLFwiY29tbW9uanNcIjpbXCJnc2FwXCIsXCJUaW1lbGluZU1heFwiXSxcImNvbW1vbmpzMlwiOltcImdzYXBcIixcIlRpbWVsaW5lTWF4XCJdLFwiYW1kXCI6XCJUaW1lbGluZU1heFwifVxuLy8gbW9kdWxlIGlkID0gOVxuLy8gbW9kdWxlIGNodW5rcyA9IDAiXSwic291cmNlUm9vdCI6IiJ9")},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE_10__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiUXVhZFwiLFwiY29tbW9uanNcIjpbXCJnc2FwXCIsXCJRdWFkXCJdLFwiY29tbW9uanMyXCI6W1wiZ3NhcFwiLFwiUXVhZFwiXSxcImFtZFwiOlwiUXVhZFwifT9iZTk5Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6IjEwLmpzIiwic291cmNlc0NvbnRlbnQiOlsibW9kdWxlLmV4cG9ydHMgPSBfX1dFQlBBQ0tfRVhURVJOQUxfTU9EVUxFXzEwX187XG5cblxuLy8vLy8vLy8vLy8vLy8vLy8vXG4vLyBXRUJQQUNLIEZPT1RFUlxuLy8gZXh0ZXJuYWwge1wicm9vdFwiOlwiUXVhZFwiLFwiY29tbW9uanNcIjpbXCJnc2FwXCIsXCJRdWFkXCJdLFwiY29tbW9uanMyXCI6W1wiZ3NhcFwiLFwiUXVhZFwiXSxcImFtZFwiOlwiUXVhZFwifVxuLy8gbW9kdWxlIGlkID0gMTBcbi8vIG1vZHVsZSBjaHVua3MgPSAwIl0sInNvdXJjZVJvb3QiOiIifQ==")},function(module,exports){eval("module.exports = __WEBPACK_EXTERNAL_MODULE_11__;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vZXh0ZXJuYWwge1wicm9vdFwiOlwiX1wiLFwiY29tbW9uanNcIjpcImxvZGFzaFwiLFwiY29tbW9uanMyXCI6XCJsb2Rhc2hcIixcImFtZFwiOlwibG9kYXNoXCJ9PzU1ZDAiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMTEuanMiLCJzb3VyY2VzQ29udGVudCI6WyJtb2R1bGUuZXhwb3J0cyA9IF9fV0VCUEFDS19FWFRFUk5BTF9NT0RVTEVfMTFfXztcblxuXG4vLy8vLy8vLy8vLy8vLy8vLy9cbi8vIFdFQlBBQ0sgRk9PVEVSXG4vLyBleHRlcm5hbCB7XCJyb290XCI6XCJfXCIsXCJjb21tb25qc1wiOlwibG9kYXNoXCIsXCJjb21tb25qczJcIjpcImxvZGFzaFwiLFwiYW1kXCI6XCJsb2Rhc2hcIn1cbi8vIG1vZHVsZSBpZCA9IDExXG4vLyBtb2R1bGUgY2h1bmtzID0gMCAxIl0sInNvdXJjZVJvb3QiOiIifQ==");
}])});